apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: gitlab-bot
  name: gitlab-bot
  namespace: gitlab-bot
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: gitlab-bot
    deploymentconfig: gitlab-bot
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: gitlab-bot
        deploymentconfig: gitlab-bot
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: gitlab-bot-env
        image: docker-registry.default.svc:5000/gitlab-bot/gitlab-bot # TODO change with your needs
        imagePullPolicy: Always
        name: gitlab-bot
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config/
          name: gitlab-bot-config
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: gitlab-bot-config
        name: gitlab-bot-config
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - gitlab-bot
      from:
        kind: ImageStreamTag
        name: gitlab-bot:latest # TODO Change with your needs
        namespace: gitlab-bot
    type: ImageChange

